trigger:
  branches:
    include:
      - "master"

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "dee7086b-b0ee-467c-94a3-6a341dff8407"
  imageRepository: "harmonie/emailsteammate"
  containerRegistry: "teammateapp.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  tag: "$(Build.BuildId)-$(Build.SourceVersion)"
  DOCKER_BUILDKIT: 1

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: BuildAzureFunctions
        displayName: Build azure function app
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: FuncToolsInstaller@0
            displayName: 'Install func tools'
            inputs:
              version: 'latest'
          - task: Bash@3
            displayName: 'Compile sources'
            inputs:
              targetType: "inline"
              script: |
                yarn
                yarn build-serverless
          - task: ArchiveFiles@2
            displayName: 'Archive compiled sources'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/packages/serverless/subscriptions'
              includeRootFolder: false
              archiveFile: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish build artifacts'
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
              artifactName: 'drop'
      - job: Build
        displayName: Build server
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Bash@3
            displayName: 'Run unit tests'
            inputs:
              targetType: "inline"
              script: |
                yarn
                yarn test
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)


          - powershell: |
              $ShortVer = "$(Build.SourceVersion)".Substring(0,8)
              Write-Host "##vso[build.updatebuildnumber]$ShortVer"

            displayName: 'Update Build Number'
